plugins {
    id 'java'
    id 'maven'
    id 'maven-publish'
    id "com.github.hierynomus.license" version "0.15.0"
    id "com.jfrog.bintray" version "1.8.4"
    id 'distribution'
}

repositories {
    mavenLocal()
    maven {
        url  "https://dl.bintray.com/epam/healenium"
    }
    mavenCentral()
}

group = 'com.epam.healenium'
sourceCompatibility = '8'

dependencies {
    compile group: 'com.typesafe', name: 'config', version: '1.3.4'
    compile group: 'com.epam.healenium', name: 'tree-comparing', version: '0.4.8'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'org.javassist', name: 'javassist', version: '3.26.0-GA'
    compile group: 'io.appium', name: 'java-client', version: '7.3.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'
    compile group: 'commons-codec', name: 'commons-codec', version: '1.12'
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.30'
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.12.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.12.1'
    compile group: 'org.mapstruct', name: 'mapstruct', version: '1.3.1.Final'
    compile group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    testCompile group: 'org.testcontainers', name: 'junit-jupiter', version: '1.13.0'

    annotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'
    testAnnotationProcessor 'org.mapstruct:mapstruct-processor:1.3.1.Final'

    annotationProcessor 'org.projectlombok:lombok:1.18.10'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.10'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
    bintrayUserName = (project.hasProperty('BINTRAY_USERNAME') ? project.findProperty('BINTRAY_USERNAME') : System.getenv()['BINTRAY_USERNAME'])
    bintrayPassword = (project.hasProperty('BINTRAY_PASSWORD') ? project.findProperty('BINTRAY_PASSWORD') : System.getenv()['BINTRAY_PASSWORD'])
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = "sources"
}

task javadocJar(type: Jar) {
    from javadoc.destinationDir
    archiveClassifier = "javadoc"
}

publishing {
    publications {
        HealeniumPublication(MavenPublication) {
            from components.java
            artifact sourceJar
            artifact javadocJar
            pom {
                name = "healenium-appium"
                description = 'Self-healing library for Appium-based tests'
                url = "https://github.com/healenium/healenium-appium.git"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
            }
        }
    }
}


bintray {
    user = bintrayUserName
    key = bintrayPassword
    publications = ['HealeniumPublication']
    dryRun = false
    publish = true
    pkg {
        userOrg = 'epam'
        repo = 'healenium'
        name = 'healenium-appium'
        desc = project.description
        websiteUrl = 'https://github.com/healenium'
        issueTrackerUrl = 'https://github.com/healenium/healenium-appium/issues'
        vcsUrl = 'https://github.com/healenium/healenium-appium.git'
        licenses = ['Apache-2.0']
        labels = ['gradle', 'healenium', 'appium']
        publicDownloadNumbers = true
        attributes = [:]
        version {
            name = project.version
            vcsTag = project.version
            attributes = [:]
        }
    }
}

bintrayUpload.onlyIf {
    !project.version.toString().toUpperCase().endsWith("-SNAPSHOT") && !project.version.toString().toUpperCase().contains("-DEV")
}

license {
    header rootProject.file('HEADER')
    excludes(["**/*.xml", "**/*.conf", "*.properties"])
    strictCheck false
}